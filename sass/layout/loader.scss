// Constants:
$COLUMNS: 99;

// Colors:
$black:        rgb(  0,   0,   0);
$dark-green:   rgb(  0,  85,   0);
$green:        rgb(  0, 204,   0);
$fade-green:   rgb(136, 255, 136);
$light-green:  rgb(187, 255, 187);
$energy-green: rgb(221, 255, 221);
$white:        rgb(255, 255, 255);

@font-face {
  font-family: 'Martix Code NFI';
  font-variant: normal;
  font-weight: normal;
  font-style: normal;

  src: url("https://raw.githubusercontent.com/UstymUkhman/UstymUkhman/master/public/fonts/matrix-code/Matrix-Code-NFI.otf?raw=true") format("opentype"),
  url("https://raw.githubusercontent.com/UstymUkhman/UstymUkhman/master/public/fonts/matrix-code/Matrix-Code-NFI.ttf?raw=true") format("truetype");
}

@function getRandom($min: 1, $max: 100) {
  @return floor(random() * ($max - $min + 1)) + $min;
}

* {
  margin: 0;
  padding: 0;
}

html, body {
  width:      100%;
  height:     100%;

  min-width:  100%;
  min-height: 100%;
  max-width:  100%;
  max-height: 100%;

  -moz-osx-font-smoothing: none;
  -webkit-font-smoothing: none;
  text-size-adjust: none;
  touch-callout: none;
  user-select: none;

  background-color: $black;
  overflow: hidden;
}

div.code-container {
  background-color: black;
  position: absolute;
  margin: auto;
  display:none;
  height: 110%;
  width: 110%;
  left: -5%;
  top: -5%;

  font-family: $font-primary;
  font-size: 30px;
  color: $color-primary;

  div#matrix-code {
    width: 100%;
    height: 100%;

    p.code-column {
      position: absolute;
      height: auto;
      width: 40px;

      text-align: center;
      line-height: 25px;

      $code-sizes: (12, 25, 60);

      @for $i from 1 through 3 {
        $current-size: #{nth($code-sizes, $i)};
        $margin: -0.5%;
        $z: 1;

        @if $i == 2 {
          $margin: 0%;
          $z: 2;
        } @else if $i == 3 {
          $margin: -0.75%;
          $z: 3;
        }

        &.column-size-#{$current-size} {
          margin-left: $margin;
          z-index: $z;
        }
      }

      span {
        text-shadow: 0 -12px 10px $color-primary-light;
        display: block;
        width: auto;

        &:nth-child(-n+5) {
          opacity: .3;
        }

        &:nth-child(n+6):nth-child(-n+10) {
          opacity: .42;
        }

        &:nth-child(n+11):nth-child(-n+15) {
          opacity: .54;
        }

        &:nth-child(n+16):nth-child(-n+25) {
          opacity: .66;
        }

        &:nth-child(n+26):nth-child(-n+35) {
          opacity: .78;
        }

        &:nth-child(n+36):nth-child(-n+40) {
          opacity: .9;
        }

        &:nth-child(n+41) {
          opacity: 1;
        }

        &:nth-last-child(3) {
          color: $color-primary-light;
        }

        &:nth-last-child(2) {
          color: $color-primary-lighter;
        }

        &:nth-last-child(1) {
          color: $color-primary-bright;
        }

        @for $i from 1 through 3 {
          $current-size: #{nth($code-sizes, $i)};

          &.code-size-#{$current-size} {
            $size: #{$current-size}px;

            font-size: $size;
            height: $size;
          }
        }
      }
    }

    @for $i from 0 through $COLUMNS {
      p.code-#{$i} {
        $delay: getRandom(0ms, 1000ms);
        $duration: getRandom(1000ms, 15000ms);

        position: absolute;
        left: unquote("#{$i}%");
        animation: drop $duration linear $delay;
      }
    }
  }
}

@keyframes drop {
  from { transform: translateY(-100%); }
  to { transform: translateY(100%); }
}
